name : (Front) Deploy to EC2

on:
    push:
        branches: [ main ]
        paths:
        - "front/**"

permissions:
    id-token: write
    contents: read

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout code
          uses: actions/checkout@v4
        
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-region: ap-northeast-2
            role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
            role-session-name: GitHubActionsSession

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Build and push Docker image
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: choon-autotrade-front
            IMAGE_TAG: latest
          run: |
            cd front
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        
        - name: Deploy to EC2 (using AWS SSM)
          uses: zip-go/aws-ssm-action@v1.0.0
          with:
            instanceName: choon-autotrade
            workingDirectory: /home/ec2-user
            commands: |
                aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}/choon-autotrade-front
                docker stop choon-autotrade-front             
                docker rm choon-autotrade-front
                docker rmi  ${{ steps.build-image.outputs.image }}
                docker pull  ${{ steps.build-image.outputs.image }}
                docker run -d --name choon-autotrade-front -p 8501:8501 -e PYTHON_ENV=prd --restart=always ${{ steps.build-image.outputs.image }}